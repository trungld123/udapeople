version: 2.1

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      # Add parameter here
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            # Your code here
            exit 1

  deploy-infrastructure:
    docker:
      # Docker image here that supports AWS CLI
    steps:
      # Checkout code from git
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              #--tags project=your-tag \
              # --stack-name "udapeople-backend-" \
              # --parameter-overrides ID="your workflow id"  
              exit 1
      - run:
          name: Ensure front-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              #--tags project=your-tag \
              # --stack-name "udapeople-frontend-" \
              # --parameter-overrides ID="your workflow id"  
              exit 1
      - run:
          name: Add back-end IP to Ansible inventory
          command: |
            # Your code here
            exit 1
      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/inventory.txt
      # Here's where you will add some code to rollback on failure

workflows:
  version: 2
  default:
    jobs:
      - destroy-environment
      - deploy-infrastructure
